Imports System.Data.OleDb
Imports System.Runtime.Intrinsics.X86
Imports Microsoft.VisualBasic.ApplicationServices
Imports Microsoft.VisualBasic.Logging
Public Class Form1

    Dim user As userInformation 'records for users
    Dim allUsers(9) As userInformation

    Dim tempId As String = "0" 'variables used for registration
    Dim tempUsername As String = ""
    Dim tempPassword As String = ""

    Dim login As Boolean = False 'variables for program operation
    Dim max As Integer = 0
    Dim optionInputted As String = ""
    Dim loginCreate As Integer = 0
    Dim locked As Boolean
    Structure userInformation 'define a record structure that will store all users information from the database table along with the current logged in user

        Dim id As String
        Dim username As String
        Dim password As String
        Dim level As String

    End Structure

    Sub startProgram()

        If login <> True Then 'this if statement is used to verify if the user is logged in or not
            ListBox2.Items.Add("login to an existing account or create a new account to play the main game")
        ElseIf login = True Then
            homeScreen(user, allUsers, login)
        Else
            ListBox2.Items.Add("error")
        End If

    End Sub
    Sub findHighestId(ByVal users() As userInformation, ByRef max As Integer, ByRef locked As Boolean)

        For y = 0 To 9 Step 1 'loop ends at 10 as if there is an 11th id it will account for this
            If users(y).id > max Then
                max = users(y).id
            End If
        Next

        If max = 11 Then 'simply checks if there is more than 10 users and if there is displays an error message
            MsgBox("there is too many users")
            locked = True
        ElseIf max <= 10 Then
            MsgBox("there is " & max & " users")
            locked = False
        End If

    End Sub
    Sub inputAccountInfo(ByRef Password As String, ByRef Username As String) 'this method is used for any inputs of user information this will validate whether any usernames or passwords entered into the program are 8 characters

        Dim sign As Boolean ' variable to keep loop if username and password is not 8 characters
        Dim characterCount1 As Integer 'variables to hold the character count for username and passwords
        Dim characterCount2 As Integer

        While sign <> True

            Username = InputBox("please enter your username")
            Password = InputBox("please enter your password")
            characterCount1 = Len(Password)
            characterCount2 = Len(Username)
            If characterCount1 = 8 And characterCount2 = 8 Then
                sign = True
                MsgBox("password and username is 8 characters")
            ElseIf characterCount1 <> 8 And characterCount2 <> 8 Then
                sign = False
                MsgBox("password and username is not 8 characters long")
            ElseIf characterCount1 = 8 And characterCount2 <> 8 Then
                sign = False
                MsgBox("username is not 8 characters")
            ElseIf characterCount1 <> 8 And characterCount2 = 8 Then
                sign = False
                MsgBox("password is not 8 characters")
            Else
                MsgBox("error")
            End If
        End While

    End Sub
    Sub homeScreen(ByRef user As userInformation, ByVal allUsers() As userInformation, ByRef loginStatus As Boolean) 'this method manages what level is being played and is a homescreen for signing out and for selecting a level and signing out

        Dim desiredLevel As String
        Dim userInput1 As String
        Dim x As Boolean = False

        userInput1 = InputBox("would you like to select a level or play from the start or sign out")

        While x <> True
            If userInput1 = "select" Then
                desiredLevel = InputBox("which level would you like to continue from?")
                If desiredLevel = "1" Then
                    level1(user, allUsers)
                    x = True
                ElseIf desiredLevel = "2" Then
                    If user.level >= 1 Then
                        level2(user, allUsers)
                        x = True
                    ElseIf user.level < 1 Then
                        ListBox2.Items.Add("you have not unlocked that level yet")
                    Else
                        ListBox2.Items.Add("error")
                    End If
                ElseIf desiredLevel = "3" Then
                    If user.level >= 2 Then
                        level3(user, allUsers)
                        x = True
                    ElseIf user.level < 2 Then
                        ListBox2.Items.Add("you haven't unlocked that level yet")
                    Else
                        ListBox2.Items.Add("error")
                    End If
                ElseIf desiredLevel > 3 Or desiredLevel < 1 Then
                    MsgBox("there's only 3 levels")
                End If
            ElseIf userInput1 = "start" Then
                level1(user, allUsers)
            ElseIf userInput1 = "sign out" Then
                ListBox2.Items.Add("please click the sign out button")
                x = True
            Else
                ListBox2.Items.Add("error")
                x = True
            End If
        End While

    End Sub

    Sub verifyLogin(ByVal users() As userInformation, ByVal userPassword As String, ByVal userUsername As String, ByRef login As Boolean, ByRef user As userInformation) 'this method is used to verify whether the username and password entered by the user is equal to any of the usernames and passwords for 

        For x As Integer = 0 To 9 Step 1
            If users(x).username = userUsername And users(x).password = userPassword Then
                login = True
                user.id = users(x).id
                user.username = users(x).username
                user.level = users(x).level
                ListBox3.Items.Add("hello " & user.username & "!")
                ListBox4.Items.Add(user.level)
            End If
        Next

        If login = True Then
            MsgBox("login was verified!")
        ElseIf login = False Then
            MsgBox("login was not verified please enter your username and password again")
        End If

    End Sub


    Sub bubbleSort(ByRef users() As userInformation)

        Dim swaps As Boolean = True
        Dim outer As Integer = 8
        Dim placeHolder As userInformation

        While swaps = True And outer >= 0
            swaps = False
            For inner = 0 To outer
                If users(inner).level > users(inner + 1).level Then
                    placeHolder = users(inner + 1)
                    users(inner + 1) = users(inner)
                    users(inner) = placeHolder
                    swaps = True
                End If
            Next
            outer = outer - 1
        End While

        ListBox1.Items.Add("the player with the highest score is " & users(9).username & " and their score is " & users(9).level)

        For x As Integer = 0 To 8 Step 1
            If users(x).level = users(9).level Then
                ListBox1.Items.Add(users(x).username & " also tied with " & users(9).username)
            End If
        Next

    End Sub

    Sub registrationDatabaseConnection(ByVal tempUsername As String, ByVal tempPassword As String, ByRef user As userInformation, ByVal max As Integer)

        If max <= 10 Then
            Try
                Dim SQLReader As OleDbDataReader
                Dim connection_type As String = "Provider=Microsoft.ACE.OLEDB.12.0;"
                Dim file_location As String = "Data Source=C:\Users\sahil\Desktop\userInformationDatabase.accdb"
                Dim conn As OleDbConnection
                conn = New OleDbConnection(connection_type & file_location)
                conn.Open()

                Dim query As String = "INSERT INTO [userInformation] ([User ID], Username, [Password], [Level]) VALUES (" & (max + 1) & ", '" & tempUsername & "', '" & tempPassword & "', " & 0 & ");"

                Dim command As New OleDbCommand(query, conn)
                SQLReader = command.ExecuteReader()

                user.id = max + 1
                user.username = tempUsername
                user.password = tempPassword
                user.level = 0
                login = True

            Catch ex As Exception
                ListBox2.Items.Add(ex.Message)
            End Try
        ElseIf max > 10 Then
            ListBox2.Items.Add("there's too many users no new account can be made")
        End If
    End Sub

    Sub saveAccount(ByVal user As userInformation, ByVal users() As userInformation) 'this method is used to save an account by deleting the row and then inserting the information back into the row with the new level

        Try
            Dim SQLReader As OleDbDataReader
            Dim connection_type As String = "Provider=Microsoft.ACE.OLEDB.12.0;"
            Dim file_location As String = "Data Source=C:\Users\sahil\Desktop\userInformationDatabase.accdb"
            Dim conn As OleDbConnection
            conn = New OleDbConnection(connection_type & file_location)
            conn.Open()

            Dim query As String = "INSERT INTO [userInformation] ([User ID], Username, [Password], [Level]) VALUES (" & user.id & ", '" & user.username & "', '" & user.password & "', " & user.level & ");"

            Dim query2 As String = "DELETE FROM [userInformation] WHERE username = '" & user.username & "';"

            Dim command2 As New OleDbCommand(query2, conn)
            SQLReader = command2.ExecuteReader()

            Dim command As New OleDbCommand(query, conn)
            SQLReader = command.ExecuteReader()



        Catch ex As Exception
            ListBox2.Items.Add(ex.Message)
        End Try

    End Sub

    Sub readDatabaseConnection(ByRef users() As userInformation)

        Dim i As Integer = 0

        Try
            'connection to the database executing the query and reading in the data
            Dim SQLReader As OleDbDataReader

            Dim connection_type As String = "Provider=Microsoft.ACE.OLEDB.12.0;"
            Dim file_location As String = "Data Source=C:\Users\sahil\Desktop\userInformationDatabase.accdb"
            Dim conn As OleDbConnection
            conn = New OleDbConnection(connection_type & file_location)
            conn.Open()
            'example 1 - select and display results()
            Dim query As String = "SELECT * FROM [userInformation]"
            Dim command As New OleDbCommand(query, conn)
            SQLReader = command.ExecuteReader

            If SQLReader.HasRows Then
                While SQLReader.Read
                    users(i).id = SQLReader("User ID")
                    users(i).username = SQLReader("Username")
                    users(i).password = SQLReader("Password")
                    users(i).level = SQLReader("Level")
                    i = i + 1
                End While
            Else
                ListBox2.Items.Add("no results returned")
            End If

        Catch ex As Exception
            ListBox2.Items.Add(ex.Message)
        End Try

    End Sub

    Sub level1(ByRef user As userInformation, ByVal users() As userInformation) 'level 1

        Dim userAnswer As String
        Dim levelComplete As Boolean
        Dim [continue] As String
        While levelComplete <> True
            userAnswer = InputBox("what is the capital of France?")
            If userAnswer = "Paris" Or userAnswer = "paris" Then
                levelComplete = True
                ListBox2.Items.Add("correct!")
                If user.level < 1 Then
                    user.level = 1
                End If
            ElseIf userAnswer <> "Paris" Or userAnswer <> "paris" Then
                levelComplete = False
                ListBox2.Items.Add("incorrect")
            Else
                ListBox2.Items.Add("error")
            End If
        End While

        [continue] = InputBox("would you like to continue?")
        If [continue] = "yes" Then
            level2(user, users)
        ElseIf [continue] = "no" Then
            homeScreen(user, users, True)
        Else
            ListBox2.Items.Add("error")
            homeScreen(user, users, True)
        End If

    End Sub

    Sub level2(ByRef user As userInformation, ByVal users() As userInformation) 'level 2

        Dim userAnswer As String
        Dim levelComplete As Boolean
        Dim [continue] As String
        While levelComplete <> True
            userAnswer = InputBox("what is the capital of England")
            If userAnswer = "London" Or userAnswer = "london" Then
                levelComplete = True
                ListBox2.Items.Add("correct!")
                If user.level < 2 Then
                    user.level = 2
                End If
            ElseIf userAnswer <> "London" Or userAnswer <> "london" Then
                levelComplete = False
                ListBox2.Items.Add("incorrect")
            Else
                ListBox2.Items.Add("error")
            End If
        End While

        [continue] = InputBox("would you like to continue?")
        If [continue] = "yes" Then
            level3(user, users)
        ElseIf [continue] = "no" Then
            homeScreen(user, users, True)

        Else
            ListBox2.Items.Add("error")
            homeScreen(user, users, True)
        End If

    End Sub

    Sub level3(ByRef user As userInformation, ByVal users() As userInformation) 'level 3

        Dim userAnswer As String
        Dim levelComplete As Boolean
        While levelComplete <> True
            userAnswer = InputBox("what is the capital of Scotland")
            If userAnswer = "Edinburgh" Or userAnswer = "edinburgh" Then
                levelComplete = True
                ListBox2.Items.Add("correct!")
                If user.level < 3 Then
                    user.level = 3
                End If
            ElseIf userAnswer <> "Edinburgh" Or userAnswer <> "edinburgh" Then
                levelComplete = False
                ListBox2.Items.Add("incorrect")
            Else
                ListBox2.Items.Add("error")
            End If
        End While

        MsgBox("You have completed the game! the program will now restart you will be signed out")
        saveAccount(user, users)

    End Sub


    Private Sub ListBox1_SelectedIndexChanged(sender As Object, e As EventArgs)

    End Sub

    Private Sub ListBox1_SelectedIndexChanged_1(sender As Object, e As EventArgs) Handles ListBox1.SelectedIndexChanged 'Leaderboard

    End Sub
    Private Sub ListBox2_SelectedIndexChanged_1(sender As Object, e As EventArgs) Handles ListBox2.SelectedIndexChanged 'Quiz Output textbox

    End Sub

    Private Sub Button5_Click_1(sender As Object, e As EventArgs) Handles Button5.Click 'Leaderboard Button

        Dim users(9) As userInformation

        readDatabaseConnection(users)
        bubbleSort(users)

    End Sub

    Private Sub Button4_Click_1(sender As Object, e As EventArgs) Handles Button4.Click 'Save button

        If login = True Then
            saveAccount(user, allUsers)
        ElseIf login = False Then
            ListBox2.Items.Add("you are not logged in")
        End If


    End Sub
    Private Sub Button2_Click_1(sender As Object, e As EventArgs) Handles Button2.Click 'Login Button

        inputAccountInfo(tempPassword, tempUsername) 'this is where the user inputs the password and username and the program verifies they are both 8 characters
        readDatabaseConnection(allUsers)
        verifyLogin(allUsers, tempPassword, tempUsername, login, user) 'this is the method that checks the 10 accounts imported in from the database and compares them to what the user has inputted as their password and username in the login process
        login = True

    End Sub
    Private Sub Button3_Click(sender As Object, e As EventArgs) Handles Button3.Click 'Registration button

        inputAccountInfo(tempPassword, tempUsername)
        readDatabaseConnection(allUsers)
        findHighestId(allUsers, max, locked)
        registrationDatabaseConnection(tempUsername, tempPassword, user, max)
        ListBox3.Items.Add("hello " & user.username & "!")
        ListBox4.Items.Add(user.level)

    End Sub
    Private Sub Button6_Click_1(sender As Object, e As EventArgs) Handles Button6.Click 'Sign out button

        If login = False Then
            MsgBox("you weren't signed in")
        ElseIf login = True Then
            login = False
            ListBox2.Items.Add("you have logged out")
        End If

    End Sub
    Private Sub Label1_Click_1(sender As Object, e As EventArgs) Handles Label1.Click 'Leaderboard label

    End Sub

    Private Sub Button1_Click_1(sender As Object, e As EventArgs) Handles Button1.Click 'start quiz button

        startProgram()

    End Sub

    Private Sub ListBox3_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ListBox3.SelectedIndexChanged 'username display

    End Sub

    Private Sub ListBox4_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ListBox4.SelectedIndexChanged 'level display

    End Sub

    'when I login delete the row 
    'the only time the account inserts is saveaccount

End Class
